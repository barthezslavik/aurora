Controller.UserProfile ->
    BeforeAction -> [AuthenticateUser, AuthorizeUser]

    GetProfile userId: int ->
        { user: GetUser(userId), post_stats: GetPostStats(userId) }

    GetPostStats(userId: int) ->
        { post_count: PostCount(userId), avg_length: AvgLength(userId) }

    UpdateAge(userId: int, newAge: int) ->
        ValidateAge(newAge) ? UpdateUserAge(userId, newAge) : Error("Invalid age")

    GetUser(userId: int) -> User.Find(userId) or Error("Not found")

    ValidateAge(age: int) -> age in Range(0, 150)

    UpdateUserAge(userId: int, age: int) -> User.Find(userId).Update(age: age)

    AvgLength(posts: Post[]) -> posts.Empty() ? 0 : SumLengths(posts) / posts.Count()